type Query {
    reporteFacturas(fechaIn: String, fechaFi: String, tipoComprobante: String, limitA:Int, limitB: Int, emitidos: Int): [ResultReporte]
    conteoFactura(fechaIn: String, fechaFi: String, tipoComprobante: String, emitidos: Int): ResultConteo
    reporteMes(year: Int, status: Int, emitidos: Int, tipoComprobante: String): [resultMes]
    reporteTotal(fechaIn: String, fechaFi: String, tipoComprobante: String, emitidos: Int, egreso: String, ingreso: String): [reporteTotales]
}


type ResultReporte {
    uuid: String
    fechaTimbrado: Date
    tipoComprobante: String
    folio: String
    serie: String
    total: Float
    descuento: Float
    totalImpuestoTrasladado: String
    totalImpuestoRetenido: String
    Metadata: String
    rfcEmisor: String
    nombreEmisor: String
    status: Int
    fechaCancelacion: Date
    emitidos: Int
}


type resultMes{
    mes: String
    subtotal: Float
    descuento: Float
    ivatraslado: Float
    retencioniva: Float
    retencionisr: Float
    total: Float
}

scalar Date


type ResultConteo{
     total: Int

}

type reporteTotales {
    totalRegistros: String
    totalEgresos: String
    totalIngresos: String
    totalGeneral: String
    subtotal: String
    descuento: String
    ivatraslado: String
    retencioniva: String
    retencionisr: String
    total: String
    subtotalC: String
    descuentoC: String
    ivatrasladoC: String
    retencionivaC: String
    retencionisrC: String
    totalC: String
}